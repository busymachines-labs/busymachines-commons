#
#  Copyright (c) 2019 BusyMachines
#
#  See company homepage at: https://www.busymachines.com/
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

# See http://scalameta.org/scalafmt/#Configuration for details,
# mostly done by trial and error. But I guess this formatting is "good enough"
#

version = 2.0.0-RC8

project {
  #if you don't specify that files ending in .scala .sbt with $,
  # .scalafmt.conf is included in the formatting attempt
  includeFilters = [
    ".*.\\.scala$"
    ".*\\..sbt$"
  ]
}

maxColumn = 120

# Note. Only for the truest vertical aligners. This is a new option,
# feel free to open PR enabling more crazy vertical alignment here.
# Expect changes.
align = most
align.openParenCallSite = false
align.openParenDefnSite = false

align.tokens.add = [
  "<-"
  "="

  //used to align comments
  "//"

  //used for aligning type definition
  ":"

  //used when creating tuples
  {code = "->", owner = "Term.ApplyInfix"},

  //sbt specific
  {code = "%", owner = "Term.ApplyInfix"},
  {code = "%%", owner = "Term.ApplyInfix"}
  {code = "%%%", owner = "Term.ApplyInfix"}
  {code = ":=", owner = "Term.ApplyInfix"}
  {code = "withSources", owner = "Term.ApplyInfix"}
  "extends"
]

continuationIndent {
  callSite = 2
  defnSite = 2
  extendSite = 4
}

newlines {
  alwaysBeforeTopLevelStatements = true
  sometimesBeforeColonInMethodReturnType = true
  penalizeSingleSelectMultiArgList = false
  alwaysBeforeElseAfterCurlyIf = true
  neverInResultType = false
}

spaces {
  afterKeywordBeforeParen = true
}

binPack {
  parentConstructors = true
  literalArgumentLists = true
  literalsMinArgCount = 5
}

optIn {
  breaksInsideChains = false
  //preserves existing newlines in . chain calls.
  //See: optIn.breakChainOnFirstMethodDot = true
  breakChainOnFirstMethodDot = true
  blankLineBeforeDocstring = true
}

rewrite {
  rules = [
    SortImports
    SortModifiers
    # if your for has more than one single <- then it gets transformed into a multit-line curly brace one
    PreferCurlyFors
    AvoidInfix
  ]
}

#we only really want to disable infix notation
# for map and flatMap and the like, because it
# kills performance and inference
rewrite.neverInfix.excludeFilters = [
  until
  to
  by
  eq
  ne
  "should.*"
  "contain.*"
  "must.*"
  in
  be
  of # behaviour of ("X")
  taggedAs
  thrownBy
  synchronized
  have
  when
  size
  theSameElementsAs
  withSources
]

# If true, the margin character | is aligned with the opening triple quote string literals
assumeStandardLibraryStripMargin = true
danglingParentheses = true
includeNoParensInSelectChains = false
includeCurlyBraceInSelectChains = true
trailingCommas = always

runner {
  optimizer {
    # Set to -1 to disable. Increase number to require bigger argument bodies to trigger flag
    # presumably, this number is number of characters.
    forceConfigStyleOnOffset = 150

    # minimum number of func arguments before config-style (look at top of file) is enabled
    forceConfigStyleMinArgCount = 2
  }
}